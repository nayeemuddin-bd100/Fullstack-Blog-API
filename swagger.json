{
	"openapi": "3.0.2",
	"info": {
		"description": "This is wordCrafters full stack blog API documentation",
		"version": "1.0.0",
		"title": "wordCrafters Full Stack Blog API"
	},
	"tags": [
		{
			"name": "User",
			"description": "User Management"
		},
		{
			"name": "Posts",
			"description": "Author posts Management"
		},
		{
			"name": "Comment",
			"description": "User Comment Management"
		},
		{
			"name": "Category",
			"description": "Post Category Management"
		},

		{
			"name": "Send Email",
			"description": "Send Email To User"
		}
	],
	"security": [
		{
			"bearerAuth": []
		}
	],

	"paths": {
		"/api/users/register": {
			"post": {
				"tags": ["User"],
				"summary": "Register a new user",
				"requestBody": {
					"description": "Created user object",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				},
				"responses": {
					"default": {
						"description": "User register in successfully"
					}
				}
			}
		},
		"/api/users/login": {
			"post": {
				"tags": ["User"],
				"summary": "Logs user into the system",
				"description": "",
				"requestBody": {
					"description": "Created user object",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"example": "john@email.com",
										"required": true
									},
									"password": {
										"type": "string",
										"example": "12345",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"400": {
						"description": "Invalid username/password supplied"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},

		"/api/users/": {
			"get": {
				"tags": ["User"],
				"summary": "Get All Users",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Fetched All users successfully"
					}
				}
			}
		},
		"/api/users/{id}": {
			"get": {
				"tags": ["User"],
				"summary": "Get user details by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "User ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User details retrieved successfully"
					}
				}
			},
			"delete": {
				"tags": ["User"],
				"summary": "Delete user by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "User ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User delete successfully"
					}
				}
			}
		},
		"/api/users/profile/{id}": {
			"get": {
				"tags": ["User"],
				"summary": "Get user profile by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "User ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User details retrieved successfully"
					}
				}
			}
		},

		"/api/users/update-user-info/": {
			"put": {
				"tags": ["User"],
				"summary": "Update user information",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Update user object",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"firstName": {
										"type": "string",
										"description": "Updated first name"
									},
									"lastName": {
										"type": "string",
										"description": "Updated last name"
									},
									"email": {
										"type": "string",
										"description": "Updated email address"
									},
									"bio": {
										"type": "string",
										"description": "Updated user bio"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User information updated successfully"
					}
				}
			}
		},
		"/api/users/update-password": {
			"put": {
				"tags": ["User"],
				"summary": "Update user password",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Update password",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"oldPassword": {
										"type": "string",
										"required": true
									},
									"newPassword": {
										"type": "string",
										"example": "12345",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User password updated successfully"
					}
				}
			}
		},
		"/api/users/forget-password-token": {
			"put": {
				"tags": ["User"],
				"summary": "Generate forget password token",
				"requestBody": {
					"description": "User email",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string",
										"example": "john@email.com",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Forget password token generated successfully"
					}
				}
			}
		},
		"/api/users/reset-password": {
			"put": {
				"tags": ["User"],
				"summary": "Reset user password",
				"requestBody": {
					"description": "User Reset password ",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"token": {
										"type": "string",
										"required": true
									},
									"password": {
										"type": "string",
										"example": "12345",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User password reset successfully"
					}
				}
			}
		},

		"/api/users/generate-verify-email-token": {
			"post": {
				"tags": ["User"],
				"summary": "Generate verification token for email",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Verification token generated successfully"
					}
				}
			}
		},
		"/api/users/verify-account": {
			"put": {
				"tags": ["User"],
				"summary": "Verify user's account",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Created user object",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"token": {
										"type": "string",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User account verified successfully"
					}
				}
			}
		},
		"/api/users/follow": {
			"put": {
				"tags": ["User"],
				"summary": "Follow another user",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Follow user ID",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"followId": {
										"type": "string",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User followed successfully"
					}
				}
			}
		},
		"/api/users/unfollow": {
			"put": {
				"tags": ["User"],
				"summary": "Unfollow user",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Unfollow user ID",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"unFollowId": {
										"type": "string",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User unfollowed successfully"
					}
				}
			}
		},
		"/api/users/block-user/{id}": {
			"put": {
				"tags": ["User"],
				"summary": "Block another user",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "User ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User blocked successfully"
					}
				}
			}
		},
		"/api/users/unblock-user/{id}": {
			"put": {
				"tags": ["User"],
				"summary": "Unblock another user",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "User ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User unblocked successfully"
					}
				}
			}
		},
		"/api/users/profile-photo-upload": {
			"put": {
				"tags": ["User"],
				"summary": "Upload user profile photo",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Profile photo object",
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",

								"properties": {
									"image": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Profile photo uploaded successfully"
					}
				}
			}
		},

		"/api/posts": {
			"post": {
				"tags": ["Posts"],
				"summary": "Create a new post",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Post data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Post created successfully",
						"content": {
							"application/json": {
								"example": {
									"title": "Sample Post",
									"category": "Technology",
									"description": "This is a sample post.",
									"image": "https://example.com/sample-image.jpg"
								}
							}
						}
					},
					"400": {
						"description": "Bad request, check your input"
					},
					"401": {
						"description": "Unauthorized, authentication required"
					}
				}
			},
			"get": {
				"tags": ["Posts"],
				"summary": "Get all posts",
				"responses": {
					"200": {
						"description": "Fetched all posts successfully",
						"content": {
							"application/json": {
								"example": [
									{
										"title": "Sample Post 1",
										"category": "Technology",
										"description": "This is the first sample post.",
										"image": "https://example.com/sample-image-1.jpg"
									}
								]
							}
						}
					}
				}
			}
		},
		"/api/posts/{id}": {
			"get": {
				"tags": ["Posts"],
				"summary": "Get a single post by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the post",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Fetched post details successfully"
					}
				}
			},
			"put": {
				"tags": ["Posts"],
				"summary": "Update a post by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the post",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Updated post data",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"title": {
										"type": "string",
										"description": "Updated post title"
									},
									"category": {
										"type": "string",
										"description": "Updated post category"
									},
									"description": {
										"type": "string",
										"description": "Updated post description"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Post updated successfully"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Posts"],
				"summary": "Delete a post by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the post",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Post deleted successfully"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/api/posts/like/{id}": {
			"put": {
				"tags": ["Posts"],
				"summary": "Like a post by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the post",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Post liked successfully"
					}
				}
			}
		},
		"/api/posts/dislike/{id}": {
			"put": {
				"tags": ["Posts"],
				"summary": "Dislike a post by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the post",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Post disliked successfully"
					}
				}
			}
		},
		"/api/comments": {
			"post": {
				"tags": ["Comment"],
				"summary": "Create a new comment",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Created comment object",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Comment"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Comment created successfully"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"get": {
				"tags": ["Comment"],
				"summary": "Fetch all comments",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Fetched all comments successfully"
					}
				}
			}
		},
		"/api/comments/{commentId}": {
			"get": {
				"tags": ["Comment"],
				"summary": "Fetch a single comment by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "commentId",
						"in": "path",
						"required": true,
						"description": "Comment ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Fetched comment details successfully"
					}
				}
			},
			"put": {
				"tags": ["Comment"],
				"summary": "Update a comment by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "commentId",
						"in": "path",
						"required": true,
						"description": "Comment ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Update comment object",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"description": {
										"type": "string",
										"description": "Comment description",
										"example": "Update Comment description"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Comment updated successfully"
					}
				}
			},
			"delete": {
				"tags": ["Comment"],
				"summary": "Delete a comment by ID",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "commentId",
						"in": "path",
						"required": true,
						"description": "Comment ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Comment deleted successfully"
					}
				}
			}
		},
		"/api/category": {
			"post": {
				"tags": ["Category"],
				"summary": "Create a new category",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Created a new category",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"title": {
										"type": "string",
										"example": "Node Js",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Category created successfully"
					}
				}
			},
			"get": {
				"tags": ["Category"],
				"summary": "Fetch all category",
				"responses": {
					"200": {
						"description": "Categories fetched successfully"
					}
				}
			}
		},
		"/api/category/{categoryId}": {
			"get": {
				"tags": ["Category"],
				"summary": "Fetch a single category by ID",
				"parameters": [
					{
						"name": "categoryId",
						"in": "path",
						"required": true,
						"description": "Category ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Category fetched successfully"
					}
				}
			},
			"put": {
				"tags": ["Category"],
				"summary": "Update a category by ID",
				"parameters": [
					{
						"name": "categoryId",
						"in": "path",
						"required": true,
						"description": "Category ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Update category object",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"title": {
										"type": "string",
										"example": "Update Category",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Category updated successfully"
					}
				}
			},
			"delete": {
				"tags": ["Category"],
				"summary": "Delete a category by ID",
				"parameters": [
					{
						"name": "categoryId",
						"in": "path",
						"required": true,
						"description": "Category ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Category deleted successfully"
					}
				}
			}
		},

		"/api/sendEmail/": {
			"post": {
				"tags": ["Send Email"],
				"summary": "Send Email to the user",
				"description": "",
				"requestBody": {
					"description": "Created send email form",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"to": {
										"type": "string",
										"example": "test@gmail.com",
										"required": true
									},
									"subject": {
										"type": "string",
										"example": "Node js is awesome",
										"required": true
									},
									"text": {
										"type": "string",
										"example": "Testing send email using swagger",
										"required": true
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "successful operation"
					}
				}
			}
		}
	},

	"components": {
		"schemas": {
			"User": {
				"type": "object",
				"properties": {
					"firstName": {
						"type": "string",
						"example": "John"
					},
					"lastName": {
						"type": "string",
						"example": "James"
					},
					"email": {
						"type": "string",
						"example": "john@email.com"
					},
					"password": {
						"type": "string",
						"example": "12345"
					}
				}
			},
			"Post": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string",
						"description": "Post title",
						"example": "Sample Post"
					},
					"category": {
						"type": "string",
						"description": "Post category",
						"example": "Technology"
					},
					"description": {
						"type": "string",
						"description": "Post description",
						"example": "This is a sample post."
					},
					"image": {
						"type": "string",
						"format": "binary",
						"description": "Post image"
					}
				},
				"required": ["title", "category", "description"]
			},
			"Comment": {
				"type": "object",
				"properties": {
					"postId": {
						"type": "string",
						"description": "Post ID",
						"example": "postId"
					},
					"author": {
						"type": "string",
						"description": "Author ID (automatically populated from request headers)",
						"example": "userId (automatically populated)"
					},
					"description": {
						"type": "string",
						"description": "Comment description",
						"example": "Comment description"
					}
				},
				"required": ["post", "description"]
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
